# coding: utf-8

"""
    MBTA

    MBTA service API. https://www.mbta.com  # noqa: E501

    OpenAPI spec version: 3.0
    Contact: developer@mbta.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class StopResourceAttributes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'wheelchair_boarding': 'int',
        'name': 'str',
        'longitude': 'float',
        'location_type': 'int',
        'latitude': 'float'
    }

    attribute_map = {
        'wheelchair_boarding': 'wheelchair_boarding',
        'name': 'name',
        'longitude': 'longitude',
        'location_type': 'location_type',
        'latitude': 'latitude'
    }

    def __init__(self, wheelchair_boarding=None, name=None, longitude=None, location_type=None, latitude=None):  # noqa: E501
        """StopResourceAttributes - a model defined in Swagger"""  # noqa: E501

        self._wheelchair_boarding = None
        self._name = None
        self._longitude = None
        self._location_type = None
        self._latitude = None
        self.discriminator = None

        if wheelchair_boarding is not None:
            self.wheelchair_boarding = wheelchair_boarding
        if name is not None:
            self.name = name
        if longitude is not None:
            self.longitude = longitude
        if location_type is not None:
            self.location_type = location_type
        if latitude is not None:
            self.latitude = latitude

    @property
    def wheelchair_boarding(self):
        """Gets the wheelchair_boarding of this StopResourceAttributes.  # noqa: E501

        Whether there are any vehicles with wheelchair boarding or paths to stops that are wheelchair acessible: 0, 1, 2.  Wheelchair boarding (`*/attributes/wheelchair_boarding`) corresponds to [GTFS wheelchair_boarding](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt). The MBTA handles parent station inheritance itself, so value can be treated simply:  | Value | Meaning                                       | |-------|-----------------------------------------------| | `0`   | No Information                                | | `1`   | Accessible (if trip is wheelchair accessible) | | `2`   | Inaccessible                                  |    # noqa: E501

        :return: The wheelchair_boarding of this StopResourceAttributes.  # noqa: E501
        :rtype: int
        """
        return self._wheelchair_boarding

    @wheelchair_boarding.setter
    def wheelchair_boarding(self, wheelchair_boarding):
        """Sets the wheelchair_boarding of this StopResourceAttributes.

        Whether there are any vehicles with wheelchair boarding or paths to stops that are wheelchair acessible: 0, 1, 2.  Wheelchair boarding (`*/attributes/wheelchair_boarding`) corresponds to [GTFS wheelchair_boarding](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt). The MBTA handles parent station inheritance itself, so value can be treated simply:  | Value | Meaning                                       | |-------|-----------------------------------------------| | `0`   | No Information                                | | `1`   | Accessible (if trip is wheelchair accessible) | | `2`   | Inaccessible                                  |    # noqa: E501

        :param wheelchair_boarding: The wheelchair_boarding of this StopResourceAttributes.  # noqa: E501
        :type: int
        """

        self._wheelchair_boarding = wheelchair_boarding

    @property
    def name(self):
        """Gets the name of this StopResourceAttributes.  # noqa: E501

        Name of a stop or station in the local and tourist vernacular.  See [GTFS `stops.txt` `stop_name](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)   # noqa: E501

        :return: The name of this StopResourceAttributes.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StopResourceAttributes.

        Name of a stop or station in the local and tourist vernacular.  See [GTFS `stops.txt` `stop_name](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)   # noqa: E501

        :param name: The name of this StopResourceAttributes.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def longitude(self):
        """Gets the longitude of this StopResourceAttributes.  # noqa: E501

        Longitude of the stop or station. Degrees East, in the [WGS-84](https://en.wikipedia.org/wiki/World_Geodetic_System#Longitudes_on_WGS.C2.A084) coordinate system. See [GTFS `stops.txt` `stop_lon`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :return: The longitude of this StopResourceAttributes.  # noqa: E501
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this StopResourceAttributes.

        Longitude of the stop or station. Degrees East, in the [WGS-84](https://en.wikipedia.org/wiki/World_Geodetic_System#Longitudes_on_WGS.C2.A084) coordinate system. See [GTFS `stops.txt` `stop_lon`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :param longitude: The longitude of this StopResourceAttributes.  # noqa: E501
        :type: float
        """

        self._longitude = longitude

    @property
    def location_type(self):
        """Gets the location_type of this StopResourceAttributes.  # noqa: E501

        The type of the stop.  | Value | Type | Description | | - | - | - | | `0` | Stop | A location where passengers board or disembark from a transit vehicle. | | `1` | Station | A physical structure or area that contains one or more stops. | | `2` | Station Entrance/Exit | A location where passengers can enter or exit a station from the street. The stop entry must also specify a parent_station value referencing the stop ID of the parent station for the entrance. |  See also [GTFS `stops.txt` `location_type`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :return: The location_type of this StopResourceAttributes.  # noqa: E501
        :rtype: int
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type):
        """Sets the location_type of this StopResourceAttributes.

        The type of the stop.  | Value | Type | Description | | - | - | - | | `0` | Stop | A location where passengers board or disembark from a transit vehicle. | | `1` | Station | A physical structure or area that contains one or more stops. | | `2` | Station Entrance/Exit | A location where passengers can enter or exit a station from the street. The stop entry must also specify a parent_station value referencing the stop ID of the parent station for the entrance. |  See also [GTFS `stops.txt` `location_type`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :param location_type: The location_type of this StopResourceAttributes.  # noqa: E501
        :type: int
        """

        self._location_type = location_type

    @property
    def latitude(self):
        """Gets the latitude of this StopResourceAttributes.  # noqa: E501

        Latitude of the stop or station.  Degrees North, in the [WGS-84](https://en.wikipedia.org/wiki/World_Geodetic_System#A_new_World_Geodetic_System:_WGS.C2.A084) coordinate system. See [GTFS `stops.txt` `stop_lat`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :return: The latitude of this StopResourceAttributes.  # noqa: E501
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this StopResourceAttributes.

        Latitude of the stop or station.  Degrees North, in the [WGS-84](https://en.wikipedia.org/wiki/World_Geodetic_System#A_new_World_Geodetic_System:_WGS.C2.A084) coordinate system. See [GTFS `stops.txt` `stop_lat`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt).   # noqa: E501

        :param latitude: The latitude of this StopResourceAttributes.  # noqa: E501
        :type: float
        """

        self._latitude = latitude

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StopResourceAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
